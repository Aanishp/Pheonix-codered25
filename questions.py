questions_front_end = [
        {"id": 1, "question": "What does HTML stand for?", "options": ["Hyper Text Markup Language", "High Text Machine Language", "Hyperlink and Text Markup Language", "Home Tool Markup Language"], "answer": "Hyper Text Markup Language", "marks": 1},
        {"id": 2, "question": "Which HTML tag is used to define an unordered list?", "options": ["<ul>", "<ol>", "<li>", "<list>"], "answer": "<ul>", "marks": 1},
        {"id": 3, "question": "What does CSS stand for?", "options": ["Cascading Style Sheets", "Creative Style System", "Computer Style Sheets", "Colorful Style Sheets"], "answer": "Cascading Style Sheets", "marks": 1},
        {"id": 4, "question": "Which HTML tag is used to insert a line break?", "options": ["<br>", "<break>", "<lb>", "<hr>"], "answer": "<br>", "marks": 1},
        {"id": 5, "question": "Which attribute is used to specify the URL of an image in HTML?", "options": ["src", "href", "alt", "url"], "answer": "src", "marks": 1},
        {"id": 6, "question": "What is the default position of an HTML element in CSS?", "options": ["static", "relative", "absolute", "fixed"], "answer": "static", "marks": 1},

        {"id": 7, "question": "Which CSS property is used to make the text bold?", "options": ["font-weight", "font-style", "text-decoration", "font-bold"], "answer": "font-weight", "marks": 2},
        {"id": 8, "question": "What is the correct syntax to include an external JavaScript file in HTML?", "options": ["<script src='file.js'></script>", "<script href='file.js'></script>", "<script link='file.js'></script>", "<script url='file.js'></script>"], "answer": "<script src='file.js'></script>", "marks": 2},
        {"id": 9, "question": "What does the 'z-index' property in CSS control?", "options": ["Stacking order of elements", "Element visibility", "Element position", "Element size"], "answer": "Stacking order of elements", "marks": 2},
        {"id": 10, "question": "How do you center a block element horizontally using CSS?", "options": ["margin: auto;", "text-align: center;", "align-items: center;", "justify-content: center;"], "answer": "margin: auto;", "marks": 2},
        {"id": 11, "question": "What is the difference between '==' and '===' in JavaScript?", "expected_answer": "'==' checks for equality with type coercion, while '===' checks for strict equality without type coercion.", "marks": 2},

        {"id": 12, "question": "Which JavaScript method is used to add an event listener to an element?", "options": ["addEventListener()", "attachEvent()", "onEvent()", "setEventListener()"], "answer": "addEventListener()", "marks": 3},
        {"id": 13, "question": "Which HTML5 element is used to define navigation links?", "options": ["<nav>", "<menu>", "<navbar>", "<navigation>"], "answer": "<nav>", "marks": 3},
        {"id": 14, "question": "What is the purpose of the 'defer' attribute in a script tag?", "expected_answer": "The 'defer' attribute ensures the script is executed only after the HTML document has been fully parsed.", "marks": 3},
        {"id": 15, "question": "Explain the difference between 'inline', 'inline-block', and 'block' elements in CSS.", "expected_answer": "'inline' elements do not start on a new line and only occupy as much width as necessary. 'block' elements start on a new line and take up the full width. 'inline-block' elements are like inline elements but allow setting width and height.", "marks": 3},
        {"id": 16, "question": "Explain the box model in CSS and how 'box-sizing' affects it.", "expected_answer": "The box model in CSS consists of margins, borders, padding, and the actual content. The 'box-sizing' property defines whether the width and height include padding and border or not.", "marks": 5},
        {"id": 17, "question": "Describe how Flexbox works in CSS and provide examples of its key properties.", "expected_answer": "Flexbox is a CSS layout model that provides an efficient way to align and distribute space among items in a container, even when their sizes are dynamic.", "marks": 5},
        {"id": 18, "question": "What are Promises in JavaScript, and how do they improve asynchronous programming?", "expected_answer": "Promises represent a value that may be available now, in the future, or never. They improve asynchronous programming by avoiding callback hell and providing a cleaner, more readable structure for handling asynchronous operations.", "marks": 5},
        {"id": 19, "question": "What is the Virtual DOM, and how does it improve performance in frameworks like React?", "expected_answer": "The Virtual DOM is a lightweight JavaScript object representation of the actual DOM. It improves performance by minimizing direct DOM manipulations and updating only the necessary parts of the real DOM.", "marks": 5}
   ]

questions_back_end = [
    {"id": 1, "question": "What is the difference between HTTP and HTTPS?", "expected_answer": "HTTPS uses SSL/TLS to encrypt communication, providing a secure connection, while HTTP does not encrypt data.", "marks": 2},
    {"id": 2, "question": "Explain the purpose of a REST API.", "expected_answer": "A REST API is a set of rules that allows applications to communicate using HTTP requests for operations like GET, POST, PUT, DELETE.", "marks": 3},
    {"id": 3, "question": "What is the difference between SQL and NoSQL databases?", "expected_answer": "SQL databases use structured schemas and are relational, while NoSQL databases are schema-less and non-relational, suitable for unstructured or semi-structured data.", "marks": 3},
    {"id": 4, "question": "What is the significance of indexing in databases?", "expected_answer": "Indexing improves query performance by allowing faster retrieval of records at the cost of additional storage and slower writes.", "marks": 3},
    {"id": 5, "question": "Explain the concept of a load balancer and its role in backend systems.", "expected_answer": "A load balancer distributes incoming network traffic across multiple servers to ensure high availability and reliability.", "marks": 3},
    {"id": 6, "question": "What is caching, and how does it improve backend performance?", "expected_answer": "Caching stores frequently accessed data in memory to reduce the time and resources needed for repeated access.", "marks": 3},
    {"id": 7, "question": "Explain the purpose of middleware in a web application framework.", "expected_answer": "Middleware is software that lies between the client and server, processing requests and responses, handling tasks like authentication, logging, or validation.", "marks": 3},
    {"id": 8, "question": "What is the difference between a process and a thread?", "expected_answer": "A process is an independent program execution unit, while a thread is a lightweight execution unit within a process, sharing resources.", "marks": 3},
    {"id": 9, "question": "What is the purpose of a message queue in distributed systems?", "expected_answer": "Message queues enable asynchronous communication between services, improving scalability and fault tolerance.", "marks": 5},
    {"id": 10, "question": "Explain the CAP theorem and its implications.", "expected_answer": "The CAP theorem states that in a distributed system, you can only achieve two of the three: Consistency, Availability, and Partition Tolerance.", "marks": 5},
    {"id": 11, "question": "What is a microservices architecture, and how does it differ from monolithic architecture?", "expected_answer": "Microservices architecture decomposes an application into small, loosely coupled services, while monolithic architecture keeps everything in a single codebase.", "marks": 5},
    {"id": 12, "question": "What are JWTs (JSON Web Tokens), and why are they used?", "expected_answer": "JWTs are compact, self-contained tokens used for securely transmitting information between parties, commonly for authentication and authorization.", "marks": 5},
    {"id": 13, "question": "What is database normalization, and why is it important?", "expected_answer": "Normalization organizes a database to reduce redundancy and improve data integrity through a series of normal forms.", "marks": 5},
    {"id": 14, "question": "What is the role of Docker in modern development?", "expected_answer": "Docker provides containerization, allowing applications to run consistently across environments by bundling code and dependencies together.", "marks": 5},
    {"id": 15, "question": "Explain the difference between synchronous and asynchronous programming.", "expected_answer": "Synchronous programming executes tasks sequentially, blocking the next operation until the current one completes. Asynchronous programming allows tasks to run independently, improving responsiveness.", "marks": 5},
    {"id": 16, "question": "How does horizontal scaling differ from vertical scaling?", "expected_answer": "Horizontal scaling adds more servers to distribute the load, while vertical scaling increases the capacity of a single server.", "marks": 5},
    {"id": 17, "question": "What is a deadlock, and how can it be prevented in multithreading?", "expected_answer": "A deadlock occurs when two or more threads block each other by holding resources the other needs. Prevention involves resource ordering, lock timeouts, or avoiding circular waits.", "marks": 5},
    {"id": 18, "question": "What is the purpose of rate limiting in APIs?", "expected_answer": "Rate limiting restricts the number of API requests a user can make within a time period, preventing abuse and ensuring fair resource usage.", "marks": 5},
    {"id": 19, "question": "Explain eventual consistency in distributed systems.", "expected_answer": "Eventual consistency ensures that, given no new updates, all replicas of data will converge to the same state over time.", "marks": 5},
    {"id": 20, "question": "What are webhooks, and how are they used?", "expected_answer": "Webhooks are user-defined HTTP callbacks triggered by events, enabling real-time communication between applications.", "marks": 5}
]

questions_dev_ops =  [
    {"id": 1, "question": "What is DevOps?", "options": ["A methodology for software development and IT operations", "A new programming language", "An IDE for developers", "A hardware design technique"], "answer": "A methodology for software development and IT operations", "marks": 1},
    {"id": 2, "question": "What does CI/CD stand for?", "options": ["Continuous Integration/Continuous Delivery", "Constant Improvement/Continuous Deployment", "Continuous Innovation/Constant Deployment", "Code Integration/Code Deployment"], "answer": "Continuous Integration/Continuous Delivery", "marks": 1},
    {"id": 3, "question": "Which tool is primarily used for container orchestration?", "options": ["Kubernetes", "Jenkins", "Terraform", "Nagios"], "answer": "Kubernetes", "marks": 2},
    {"id": 4, "question": "What is the purpose of a reverse proxy in DevOps?", "options": ["Load balancing and caching", "Direct database access", "Developing APIs", "Version control"], "answer": "Load balancing and caching", "marks": 2},
    {"id": 5, "question": "Which file is commonly used for container configuration in Docker?", "options": ["Dockerfile", "docker-compose.yml", "config.json", "container-config.yaml"], "answer": "Dockerfile", "marks": 2},
    {"id": 6, "question": "What is Infrastructure as Code (IaC)?", "expected_answer": "IaC is the practice of managing and provisioning infrastructure using code rather than manual processes.", "marks": 3},
    {"id": 7, "question": "What is the purpose of version control in DevOps?", "options": ["Track changes to code", "Improve system uptime", "Monitor server health", "Automate deployments"], "answer": "Track changes to code", "marks": 3},
    {"id": 8, "question": "What is Jenkins primarily used for?", "options": ["Continuous integration and deployment", "Code editing", "Server monitoring", "Container orchestration"], "answer": "Continuous integration and deployment", "marks": 3},
    {"id": 9, "question": "Explain the role of configuration management in DevOps.", "expected_answer": "Configuration management ensures that systems and software maintain consistent configuration across environments, automating tasks such as updates and system provisioning.", "marks": 5},
    {"id": 10, "question": "What are the benefits of containerization in DevOps?", "expected_answer": "Containerization provides portability, efficient resource utilization, isolation, and consistency between development and production environments.", "marks": 5},
    {"id": 11, "question": "What is the difference between Continuous Integration and Continuous Deployment?", "expected_answer": "Continuous Integration is the practice of merging code changes frequently, while Continuous Deployment automatically deploys every code change that passes tests to production.", "marks": 5},
    {"id": 12, "question": "What is the purpose of monitoring in DevOps?", "expected_answer": "Monitoring helps track system performance, identify bottlenecks, and ensure reliability by providing alerts and insights about application and infrastructure behavior.", "marks": 5},
    {"id": 13, "question": "What is the role of Ansible in DevOps?", "options": ["Configuration management and automation", "Container orchestration", "CI/CD pipelines", "Code analysis"], "answer": "Configuration management and automation", "marks": 5},
    {"id": 14, "question": "What is the difference between Docker and Kubernetes?", "expected_answer": "Docker is a platform for containerization, while Kubernetes is an orchestration tool to manage multiple containers across a cluster.", "marks": 5},
    {"id": 15, "question": "Explain the concept of blue-green deployment.", "expected_answer": "Blue-green deployment is a strategy that reduces downtime and risk by running two identical environments. One serves traffic while the other is updated, and traffic is switched after successful testing.", "marks": 5},
    {"id": 16, "question": "What is the purpose of a load balancer in DevOps?", "expected_answer": "A load balancer distributes incoming network traffic across multiple servers to ensure high availability and reliability.", "marks": 5},
    {"id": 17, "question": "What is a pipeline in Jenkins, and how is it defined?", "expected_answer": "A Jenkins pipeline is a set of steps to automate processes like building, testing, and deploying applications, defined in a 'Jenkinsfile' using Groovy scripting.", "marks": 5},
    {"id": 18, "question": "What are microservices, and how do they relate to DevOps?", "expected_answer": "Microservices are an architectural style where applications are built as a collection of small, independent services. They align well with DevOps by enabling frequent, incremental updates and scalability.", "marks": 5},
    {"id": 19, "question": "Describe the role of Terraform in infrastructure management.", "expected_answer": "Terraform is an open-source IaC tool used to define and provision infrastructure across multiple cloud providers using a declarative configuration language.", "marks": 5},
    {"id": 20, "question": "What are the key differences between Agile and DevOps?", "expected_answer": "Agile focuses on iterative development and collaboration between teams, while DevOps emphasizes automation, integration, and collaboration between development and operations.", "marks": 10}
]

questions_cyber =  [
    {"id": 1, "question": "What is a firewall, and how does it enhance security?", "expected_answer": "A firewall is a network security system that monitors and controls incoming and outgoing network traffic based on predetermined security rules. It helps prevent unauthorized access to or from private networks.", "marks": 5},
    {"id": 2, "question": "What is the difference between symmetric and asymmetric encryption?", "expected_answer": "Symmetric encryption uses the same key for encryption and decryption, while asymmetric encryption uses a public key for encryption and a private key for decryption.", "marks": 5},
    {"id": 3, "question": "What are the key differences between IDS (Intrusion Detection System) and IPS (Intrusion Prevention System)?", "expected_answer": "IDS detects and alerts about malicious activity but does not take action, whereas IPS actively prevents and blocks threats.", "marks": 5},
    {"id": 4, "question": "What is a Denial of Service (DoS) attack, and how can it be mitigated?", "expected_answer": "A DoS attack aims to make a network or service unavailable by overwhelming it with traffic. Mitigation strategies include rate limiting, firewalls, and using Content Delivery Networks (CDNs).", "marks": 5},
    {"id": 5, "question": "What is SQL injection, and how can it be prevented?", "expected_answer": "SQL injection is a code injection technique where attackers execute malicious SQL statements to manipulate databases. Prevention measures include input validation, prepared statements, and using ORM frameworks.", "marks": 5},
    {"id": 6, "question": "What is the CIA triad in cybersecurity?", "expected_answer": "The CIA triad stands for Confidentiality, Integrity, and Availability. It is a model to guide policies for information security.", "marks": 3},
    {"id": 7, "question": "What is the difference between hashing and encryption?", "expected_answer": "Hashing is a one-way process that converts data into a fixed-length hash value, while encryption is a two-way process that encodes data to be decoded later using a key.", "marks": 3},
    {"id": 8, "question": "What are the differences between black hat, white hat, and grey hat hackers?", "expected_answer": "Black hat hackers engage in illegal activities for malicious purposes. White hat hackers work legally to find and fix vulnerabilities. Grey hat hackers fall between the two, sometimes acting without permission but not maliciously.", "marks": 3},
    {"id": 9, "question": "What is two-factor authentication, and why is it important?", "expected_answer": "Two-factor authentication adds a second layer of security by requiring a combination of two different factors, such as a password and a code sent to a mobile device.", "marks": 3},
    {"id": 10, "question": "What is a man-in-the-middle (MITM) attack?", "expected_answer": "A MITM attack occurs when an attacker intercepts and possibly alters the communication between two parties without their knowledge.", "marks": 3},
    {"id": 11, "question": "What is phishing, and how can it be avoided?", "expected_answer": "Phishing is a social engineering attack where attackers deceive individuals into providing sensitive information. Avoidance strategies include verifying email sources and avoiding clicking suspicious links.", "marks": 3},
    {"id": 12, "question": "What is a zero-day vulnerability?", "expected_answer": "A zero-day vulnerability is a software flaw unknown to the vendor and unpatched, making it exploitable by attackers.", "marks": 3},
    {"id": 13, "question": "What is the purpose of penetration testing?", "expected_answer": "Penetration testing simulates cyberattacks to identify and address vulnerabilities in a system or network.", "marks": 3},
    {"id": 14, "question": "What is ransomware, and how does it affect businesses?", "expected_answer": "Ransomware is a type of malware that encrypts a victim's data and demands a ransom for the decryption key, potentially causing significant financial and operational damage.", "marks": 3},
    {"id": 15, "question": "What is the difference between an active attack and a passive attack?", "expected_answer": "An active attack involves altering the system or data, while a passive attack involves monitoring and intercepting data without modification.", "marks": 3},
    {"id": 16, "question": "Explain the concept of Public Key Infrastructure (PKI).", "expected_answer": "PKI is a framework of policies, technologies, and services that enables secure electronic transfer of information using public and private keys.", "marks": 5},
    {"id": 17, "question": "What are the common techniques used in social engineering attacks?", "expected_answer": "Techniques include phishing, baiting, pretexting, and tailgating.", "marks": 5},
    {"id": 18, "question": "What is the OWASP Top 10?", "expected_answer": "The OWASP Top 10 is a standard awareness document for developers and security professionals, highlighting the ten most critical web application security risks.", "marks": 5},
    {"id": 19, "question": "Explain how a VPN ensures secure communication.", "expected_answer": "A VPN encrypts internet traffic and creates a secure tunnel between the user and the server, protecting against interception and enhancing privacy.", "marks": 5},
    {"id": 20, "question": "What is the role of a security analyst in a cybersecurity team?", "expected_answer": "A security analyst monitors and protects an organization’s systems, identifies threats, and responds to security incidents.", "marks": 5}
]